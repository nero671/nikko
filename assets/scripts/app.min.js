"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var app = {
  pathToLibsFiles: './assets/libs'
};
window.app = app; // polyfills
// before polyfills

(function (arr) {
  arr.forEach(function (item) {
    if (item.hasOwnProperty('before')) {
      return;
    }

    Object.defineProperty(item, 'before', {
      configurable: true,
      enumerable: true,
      writable: true,
      value: function before() {
        // eslint-disable-next-line prefer-rest-params
        var argArr = Array.prototype.slice.call(arguments);
        var docFrag = document.createDocumentFragment();
        argArr.forEach(function (argItem) {
          var isNode = argItem instanceof Node;
          docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));
        });
        this.parentNode.insertBefore(docFrag, this);
      }
    });
  });
})([Element.prototype, CharacterData.prototype, DocumentType.prototype]); // forEach polyfill


if (window.NodeList && !NodeList.prototype.forEach) {
  NodeList.prototype.forEach = function (callback, thisArg) {
    // eslint-disable-next-line no-param-reassign
    thisArg = thisArg || window;

    for (var i = 0; i < this.length; i++) {
      callback.call(thisArg, this[i], i, this);
    }
  };
}

document.addEventListener('DOMContentLoaded', function () {
  var showMenu = function showMenu() {
    var headerMenu = document.querySelector('#header-menu');
    var headerMainMenu = document.querySelector('.header-main-menu');
    var headerCompanyMenu = document.querySelector('.header-company-menu');

    if (headerMenu) {
      document.body.addEventListener('mouseover', function (e) {
        if (e.target.closest('.open-main-menu') || e.target.closest('.first-level__navbar') || e.target.closest('.second-level-menu')) {
          headerMenu.classList.add('active');
          headerMainMenu.classList.add('active');
          headerCompanyMenu.classList.remove('active');
        } else {
          headerMenu.classList.remove('active');
          headerMainMenu.classList.remove('active');
        }

        if (e.target.closest('.open-company-menu') || e.target.closest('.header-company-menu')) {
          headerMenu.classList.add('active');
          headerCompanyMenu.classList.add('active');
          headerMainMenu.classList.remove('active');
        }
      });
    }
  };

  showMenu();

  var toggleSubMenu = function toggleSubMenu() {
    var firstLevelNavbarWrapper = document.querySelector('.first-level__navbar-wrapper');
    var navLinkItem = document.querySelectorAll('.nav-link__item');
    var secondLevelMenu = document.querySelectorAll('.second-level-menu');

    var toggleMenuList = function toggleMenuList(index) {
      for (var i = 0; i < secondLevelMenu.length; i++) {
        if (index === i) {
          navLinkItem[i].classList.add('active');
          secondLevelMenu[i].classList.remove('d-none');
        } else {
          navLinkItem[i].classList.remove('active');
          secondLevelMenu[i].classList.add('d-none');
        }
      }
    };

    if (firstLevelNavbarWrapper) {
      firstLevelNavbarWrapper.addEventListener('mouseover', function (e) {
        /* eslint-disable-next-line */
        var target = e.target;

        if (target.classList.contains('nav-link__item')) {
          navLinkItem.forEach(function (item, i) {
            if (item === target) {
              toggleMenuList(i);
            }
          });
        }
      });
    }
  };

  toggleSubMenu();

  var mainTabs = function mainTabs() {
    var tabBlockHeader = document.querySelector('.tab-block-header');
    var tabLink = document.querySelectorAll('.tab-block-link');
    var tabContent = document.querySelectorAll('.nikko-tab');
    var bw = document.body.clientWidth;

    if (bw > 576) {
      tabLink.forEach(function (item) {
        /* eslint-disable-next-line */
        item.href = '#';
      });
    }

    var toggleTab = function toggleTab(index) {
      for (var i = 0; i < tabContent.length; i++) {
        if (index === i) {
          tabLink[i].classList.add('active');
          tabContent[i].classList.remove('d-none');
        } else {
          tabLink[i].classList.remove('active');
          tabContent[i].classList.add('d-none');
        }
      }
    };

    if (tabBlockHeader) {
      tabBlockHeader.addEventListener('click', function (e) {
        /* eslint-disable-next-line */
        var target = e.target;

        if (target.classList.contains('tab-block-link')) {
          tabLink.forEach(function (item, i) {
            if (item === target) {
              toggleTab(i);
            }
          });
        }
      });
    }
  };

  mainTabs();

  var partnersSlider = function partnersSlider() {
    /* eslint-disable-next-line */
    var partnersSwiper = new Swiper('.partners-slider', {
      slidesPerView: 5,
      slidesPerGroup: 1,
      loop: true,
      speed: 800,
      navigation: {
        nextEl: '.gallery__arrow--next',
        prevEl: '.gallery__arrow--prev'
      },
      breakpoints: {
        320: {
          slidesPerView: 1
        },
        400: {
          slidesPerView: 2
        },
        576: {
          slidesPerView: 3
        },
        768: {
          slidesPerView: 4
        },
        1050: {
          slidesPerView: 5
        }
      },
      autoplay: {
        delay: 1000,
        disableOnInteraction: false,
        pauseOnMouseEnter: true
      }
    });
  };

  partnersSlider();

  var rewardSlider = function rewardSlider() {
    /* eslint-disable-next-line */
    var rewardsSwiper = new Swiper('.reward-slider', {
      slidesPerView: 4.5,
      slidesPerGroup: 1,
      spaceBetween: 40,
      loop: true,
      grabCursor: true,
      breakpoints: {
        320: {
          slidesPerView: 1.5
        },
        576: {
          slidesPerView: 2.5
        },
        768: {
          slidesPerView: 3.5
        },
        1000: {
          slidesPerView: 4.5
        }
      }
    });
  };

  rewardSlider();

  var formTabs = function formTabs() {
    var serviceFormTabHeader = document.querySelector('.service-form__tab-header');
    var serviceFormTabLink = document.querySelectorAll('.service-form__tab-link');
    var servFormContent = document.querySelectorAll('.serv-form-content');

    var toggleFormTab = function toggleFormTab(index) {
      for (var i = 0; i < servFormContent.length; i++) {
        if (index === i) {
          serviceFormTabLink[i].classList.add('active');
          servFormContent[i].classList.remove('d-none');
        } else {
          serviceFormTabLink[i].classList.remove('active');
          servFormContent[i].classList.add('d-none');
        }
      }
    };

    if (serviceFormTabHeader) {
      serviceFormTabHeader.addEventListener('click', function (e) {
        /* eslint-disable-next-line */
        var target = e.target;

        if (target.classList.contains('service-form__tab-link')) {
          serviceFormTabLink.forEach(function (item, i) {
            if (item === target) {
              toggleFormTab(i);
            }
          });
        }
      });
    }
  };

  formTabs();

  var scrollTo = function scrollTo() {
    document.body.addEventListener('click', function (e) {
      if (e.target.closest('a[href^="#"]')) {
        e.preventDefault();
        var target = e.target.closest('a[href^="#"]').getAttribute('href');
        document.querySelector(target).scrollIntoView({
          behavior: 'smooth',
          block: 'start'
        });
      }
    });
  };

  scrollTo();

  var activeScroll = function activeScroll() {
    /* eslint-disable-next-line */
    var scrollpos = window.scrollY;
    var asideLink = document.querySelectorAll('.aside-link');
    asideLink.forEach(function (item) {
      if (scrollpos <= 1700) {
        if (item.href.includes('#general-info')) {
          item.classList.add('active');
        } else {
          item.classList.remove('active');
        }
      } else if (scrollpos > 1700 && scrollpos <= 2700) {
        if (item.href.includes('#delivery-equipment')) {
          item.classList.add('active');
        } else {
          item.classList.remove('active');
        }
      } else {
        /* eslint-disable-next-line */
        if (item.href.includes('#service-form')) {
          item.classList.add('active');
        } else {
          item.classList.remove('active');
        }
      }
    });
  };

  var showMore = function showMore() {
    var clientsItem = document.querySelectorAll('.clients-item');
    clientsItem.forEach(function (item) {
      var clientsListItem = item.querySelectorAll('.clients-list__item');
      /* eslint-disable-next-line */

      clientsListItem.forEach(function (item, index) {
        item.classList.add('d-none');

        if (index === 0 || index === 1 || index === 2 || index === 3 || index === 4) {
          item.classList.remove('d-none');
        }
      });
      item.addEventListener('click', function (e) {
        if (e.target.matches('.clients-list-more')) {
          /* eslint-disable-next-line */
          var hideElem = item.querySelectorAll('.d-none');
          hideElem.forEach(function (elem) {
            elem.classList.remove('d-none');
          });
          e.target.classList.add('d-none');
        }
      });
    });
  };

  showMore();

  var useAccordion = function useAccordion() {
    var accordion = document.querySelector('.accordion');

    var open = function open(button, dropdown, arrow) {
      /* eslint-disable-next-line */
      dropdown.style.height = "".concat(dropdown.scrollHeight + 60, "px");
      button.classList.add('active');
      dropdown.classList.add('active');
      arrow.classList.add('active');
    };

    var close = function close(button, dropdown, arrow) {
      button.classList.remove('active');
      /* eslint-disable-next-line */

      dropdown.classList.remove('active');
      /* eslint-disable-next-line */

      dropdown.style.height = '';
      arrow.classList.remove('active');
    };

    if (accordion) {
      accordion.addEventListener('click', function (e) {
        /* eslint-disable-next-line */
        var target = e.target;

        if (target.closest('.accordion-title')) {
          var parent = target.closest('.accordion-item');
          var button = target.closest('.accordion-title');
          var dropdown = parent.querySelector('.accordion-description');
          var arrow = parent.querySelector('.accordion-title__arrow');
          /* eslint-disable-next-line */

          dropdown.classList.contains('active') ? close(button, dropdown, arrow) : open(button, dropdown, arrow);
        }
      });
    }
  };

  useAccordion();

  var equipmentGalleryTab = function equipmentGalleryTab() {
    var equipmentHeaderGallery = document.querySelector('.equipment-header__gallery');
    var equipmentHeaderGalleryLink = document.querySelectorAll('.equipment-header__gallery-link');
    var equipmentHeaderGalleryContent = document.querySelectorAll('.equipment-header__gallery-content');
    var playButtonWrap = document.querySelectorAll('.play-button__wrap');
    var eqVideo = document.querySelectorAll('.eq_video');
    var eqImg = document.querySelectorAll('.eq_img');
    equipmentHeaderGalleryContent.forEach(function (item, index) {
      item.classList.add('d-none');

      if (index === 0) {
        item.classList.remove('d-none');
      }
    });
    playButtonWrap.forEach(function (item, index) {
      item.addEventListener('click', function (e) {
        var target = e.target.closest('.play-button__wrap');

        if (item === target) {
          for (var i = 0; i < eqVideo.length; i++) {
            if (i === index) {
              eqVideo[i].style.display = 'flex';
              playButtonWrap[i].style.display = 'none';
              eqImg[i].style.display = 'none';
            } else {
              eqVideo[i].style.display = 'none';
              playButtonWrap[i].style.display = 'flex';
              eqImg[i].style.display = 'flex';
            }
          }
        }
      });
    });

    var toggleEqList = function toggleEqList(index) {
      for (var i = 0; i < equipmentHeaderGalleryContent.length; i++) {
        if (index === i) {
          equipmentHeaderGalleryContent[i].classList.remove('d-none');
        } else {
          equipmentHeaderGalleryContent[i].classList.add('d-none');
        }
      }
    };

    if (equipmentHeaderGallery) {
      equipmentHeaderGallery.addEventListener('click', function (e) {
        var target = e.target.closest('.equipment-header__gallery-link');

        if (target) {
          equipmentHeaderGalleryLink.forEach(function (item, i) {
            if (item === target) {
              toggleEqList(i);
            }
          });
        }
      });
    }
  };

  equipmentGalleryTab();

  var openTechPopup = function openTechPopup() {
    var equipmentHeaderBtnTransparent = document.querySelector('.equipment-header__btn_transparent');
    var equipmentPopup = document.querySelector('.equipment-popup');

    if (equipmentHeaderBtnTransparent) {
      equipmentHeaderBtnTransparent.addEventListener('click', function () {
        equipmentPopup.style.display = 'flex';
      });
    }

    if (equipmentPopup) {
      equipmentPopup.addEventListener('click', function (e) {
        if (e.target.closest('.close-popup') || e.target.matches('.popup')) {
          equipmentPopup.style.display = 'none';
        }
      });
    }
  };

  openTechPopup();

  var modificationSlider = function modificationSlider() {
    /* eslint-disable-next-line */
    var modSwiper = new Swiper('.modification-tab__slider', {
      slidesPerView: 2.1,
      slidesPerGroup: 1,
      centeredSlides: true,
      loop: true,
      navigation: {
        nextEl: '.mod__arrow--next',
        prevEl: '.mod__arrow--prev'
      },
      pagination: {
        el: '.swiper-pagination',
        type: 'bullets',
        clickable: true
      },
      breakpoints: {
        320: {
          slidesPerView: 1
        },
        576: {
          slidesPerView: 1.5
        },
        1000: {
          spaceBetween: 100,
          slidesPerView: 2.1
        },
        1650: {
          slidesPerView: 2.1,
          slidesPerGroup: 1
        }
      }
    });
  };

  modificationSlider();

  var equipmentTab = function equipmentTab() {
    var modificationTabsHeader = document.querySelector('.modification-tabs__header');
    var modificationTabsLink = document.querySelectorAll('.modification-tabs__link');
    var modificationTab = document.querySelectorAll('.modification-tab'); // const bw = document.body.clientWidth;
    // if (bw > 576) {
    //   const toggleEqInfo = (index) => {
    //     for (let i = 0; i < modificationTab.length; i++) {
    //       if (index === i) {
    //         modificationTab[i].classList.remove('d-none');
    //         modificationTabsLink[i].classList.add('active');
    //       } else {
    //         modificationTab[i].classList.add('d-none');
    //         modificationTabsLink[i].classList.remove('active');
    //       }
    //     }
    //   };
    //   if (modificationTabsHeader) {
    //     modificationTabsHeader.addEventListener('click', (e) => {
    //       /* eslint-disable-next-line */
    //       const target = e.target;
    //       if (target.closest('.modification-tabs__link')) {
    //         modificationTabsLink.forEach((item, i) => {
    //           if (item === target) {
    //             toggleEqInfo(i);
    //           }
    //         });
    //       }
    //     });
    //   }
    // } else {

    modificationTab.forEach(function (item) {
      item.classList.remove('d-none');
    });

    if (modificationTabsHeader) {
      modificationTabsHeader.addEventListener('click', function (e) {
        var target = e.target.closest('.modification-tabs__link');

        if (target) {
          modificationTabsLink.forEach(function (item) {
            if (item === target) {
              target.classList.add('active');
            } else {
              item.classList.remove('active');
            }
          });
          modificationTab.forEach(function (item) {
            if (item.dataset.scroll === target.dataset.scroll) {
              item.scrollIntoView({
                behavior: 'smooth',
                block: 'start',
                inline: 'center'
              });
            }
          });
        }
      });
    }
  };

  equipmentTab();

  var toggleMobileSubMenu = function toggleMobileSubMenu() {
    var mobileMenuWrapper = document.querySelector('.mobile-menu__wrapper');
    var mobileSubmenuItem = document.querySelectorAll('.mobile-submenu__item');

    var open = function open(button, dropdown, arrow) {
      /* eslint-disable-next-line */
      if (button.classList.contains('active')) {
        button.classList.remove('active');
      }

      dropdown.style.height = "".concat(dropdown.scrollHeight + "px");
      button.classList.add('active');
      dropdown.classList.add('active');
      arrow.classList.add('active');
    };

    var openOnce = function openOnce(button, dropdown, arrow, newHeight) {
      /* eslint-disable-next-line */
      dropdown.style.height = "".concat(dropdown.scrollHeight + "px");
      console.log(dropdown.style.height);
      /* eslint-disable-next-line */

      newHeight.style.height = "".concat(144 + dropdown.scrollHeight + "px");
      console.log(newHeight.style.height);
      button.classList.add('active');
      dropdown.classList.add('active');
      arrow.classList.add('active');
    };

    var close = function close(button, dropdown, arrow) {
      button.classList.remove('active');
      /* eslint-disable-next-line */

      dropdown.classList.remove('active');
      /* eslint-disable-next-line */

      dropdown.style.height = '';
      arrow.classList.remove('active');
    };

    var closeOnce = function closeOnce(button, dropdown, arrow, newHeight) {
      /* eslint-disable-next-line */
      newHeight.style.height = "".concat(136 + "px");
      button.classList.remove('active');
      /* eslint-disable-next-line */

      dropdown.classList.remove('active');
      /* eslint-disable-next-line */

      dropdown.style.height = '';
      arrow.classList.remove('active');
    };

    if (mobileMenuWrapper) {
      mobileMenuWrapper.addEventListener('click', function (e) {
        /* eslint-disable-next-line */
        var target = e.target;

        if (target.closest('.mobile-navbar__link')) {
          var parent = target.closest('.mobile-navbar__item');
          var button = target.closest('.mobile-navbar__link');
          var dropdown = parent.querySelector('.mobile-submenu');
          var arrow = parent.querySelector('.after-link__arrow');
          /* eslint-disable-next-line */

          dropdown.classList.contains('active') ? close(button, dropdown, arrow) : open(button, dropdown, arrow);
        } else if (target.closest('.mobile-submenu_third')) {
          var _parent = target.closest('.mobile-submenu__item');

          var _button = target.closest('.mobile-submenu__wrapper');

          var _dropdown = _parent.querySelector('.mobile-submenu__links');

          var _arrow = _parent.querySelector('.after-link__arrow');

          var newHeight = document.querySelector('.mobile-submenu');
          /* eslint-disable-next-line */

          _dropdown.classList.contains('active') ? closeOnce(_button, _dropdown, _arrow, newHeight) : openOnce(_button, _dropdown, _arrow, newHeight);
        }
      });
    }
  };

  toggleMobileSubMenu();

  var toggleMenu = function toggleMenu() {
    var burger = document.querySelector('.burger');
    var mobileMenu = document.querySelector('.mobile-menu');
    var mobileMenuWrapper = document.querySelector('.mobile-menu__wrapper');

    if (burger) {
      burger.addEventListener('click', function () {
        mobileMenu.style.display = 'block';
        setTimeout(function () {
          mobileMenuWrapper.classList.add('active');
        }, 200);
      });
    }

    if (mobileMenu) {
      mobileMenu.addEventListener('click', function (e) {
        if (e.target.closest('.mobile-cross')) {
          mobileMenu.style.display = 'none';
          mobileMenuWrapper.classList.remove('active');
        }
      });
    }
  };

  toggleMenu();

  var openMenuHelp = function openMenuHelp() {
    var sitemapOpener = document.querySelector('.sitemap__opener');
    var sitemap = document.querySelector('.sitemap');

    if (sitemap) {
      sitemapOpener.addEventListener('click', function () {
        sitemap.classList.toggle('open');
        sitemapOpener.classList.toggle('active');
      });
    }
  };

  openMenuHelp();

  function maskPhone(selector) {
    var masked = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '+____________________________________________________________________________________________________________';
    var elems = document.querySelectorAll(selector);

    function mask(event) {
      /* eslint-disable-next-line */
      var keyCode = event.keyCode;
      var template = masked;
      /* eslint-disable-next-line */

      var def = template.replace(/\D/g, '');
      /* eslint-disable-next-line */

      var val = this.value.replace(/\D/g, '');
      var i = 0;
      /* eslint-disable-next-line */

      var newValue = template.replace(/[_\d]/g, function (a) {
        return i < val.length ? val.charAt(i++) || def.charAt(i) : a;
      });
      i = newValue.indexOf('_');

      if (i !== -1) {
        newValue = newValue.slice(0, i);
      }
      /* eslint-disable-next-line */


      var reg = template.substr(0, this.value.length).replace(/_+/g, function (a) {
        return '\\d{1,' + a.length + '}';
      }).replace(/[+()]/g, '\\$&');
      /* eslint-disable-next-line */

      reg = new RegExp('^' + reg + '$');
      /* eslint-disable-next-line */

      if (!reg.test(this.value) || this.value.length < 5 || keyCode > 47 && keyCode < 58) {
        this.value = newValue;
      }

      if (event.type === 'blur' && this.value.length < 5) {
        this.value = '';
      }
    }
    /* eslint-disable-next-line */


    var _iterator = _createForOfIteratorHelper(elems),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var elem = _step.value;
        elem.addEventListener('input', mask);
        elem.addEventListener('focus', mask);
        elem.addEventListener('blur', mask);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }

  maskPhone('input[name="phone"]');

  var validateForm = function validateForm() {
    var formContent = document.querySelector('.form-content');
    formContent.addEventListener('input', function (e) {
      if (e.target.matches('input') || e.target.matches('textarea')) {
        if (e.target.value !== '') {
          e.target.style.position = 'relative';
        } else {
          e.target.style.position = 'static';
        }
      }

      if (e.target.matches('input[name="name"]') || e.target.matches('input[name="company"]')) {
        if (e.target.value.length <= 50) {
          e.target.value = e.target.value.replace(/[^\D]/, '');
        } else {
          e.target.value = '';
        }

        if (e.target.matches('input[name="email"]')) {
          if (e.target.value.length >= 50) {
            e.target.value = '';
          } else {
            /* eslint-disable-next-line */
            e.target.value = e.target.value.replace(/[А-яЁё]/, '');
          }
        }
      }
    });
  };

  validateForm();

  var openCompanyVideo = function openCompanyVideo() {
    var iconPlay = document.querySelector('.icon-play__wrapper');
    var nikkoCompanyVideo = document.querySelector('.nikko-company__video');
    var nikkoComImg = document.querySelector('.nikko-com-video');

    if (iconPlay) {
      iconPlay.addEventListener('click', function () {
        nikkoComImg.style.display = 'none';
        iconPlay.style.display = 'none';
        nikkoCompanyVideo.style.display = 'block';
      });
    }
  };

  openCompanyVideo();
  window.addEventListener('scroll', function () {
    activeScroll();
  });
}, false);
app.addLibs = {
  name: 'addLibs',
  description: 'connect the script library dynamically',
  addScriptFile: function addScriptFile(nameFile, callback) {
    var body = document.getElementsByTagName('body')[0];
    var script = document.createElement('script');

    script.onload = function () {
      return callback && callback();
    };

    script.src = "".concat(app.pathToLibsFiles, "/js/").concat(nameFile, ".js");
    body.appendChild(script);
  },
  addStyleFile: function addStyleFile(nameFile) {
    var appCss = document.getElementById('app-css');
    var link = document.createElement('link');
    link.rel = 'stylesheet';
    link.href = "".concat(app.pathToLibsFiles, "/css/").concat(nameFile, ".css");
    appCss.before(link);
  },
  initScript: function initScript(nameFile, nameLib, callback) {
    var hasLibs = null;
    var scripts = document.querySelectorAll('script');
    scripts.forEach(function (el) {
      var str = el.getAttribute('src');

      if (str) {
        if (str.indexOf(nameFile) >= 0) {
          hasLibs = true;
        }
      }
    });

    if (!hasLibs) {
      this.addScriptFile(nameFile, callback);
    } else {
      var timerId = setInterval(function () {
        if (window[nameLib] || window.jQuery && jQuery()[nameLib]) {
          callback();
          clearInterval(timerId);
        }
      }, 1);
    }
  },
  initStyle: function initStyle(nameFile) {
    var hasLibs = null;
    var link = document.querySelectorAll('link');
    link.forEach(function (el) {
      var str = el.getAttribute('src');

      if (str) {
        if (str.indexOf(nameFile) >= 0) {
          hasLibs = true;
        }
      }
    });

    if (!hasLibs) {
      this.addStyleFile(nameFile);
    }
  }
}; // app.yourScriptName.init();
//# sourceMappingURL=app.min.js.map
